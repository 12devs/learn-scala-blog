akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = INFO
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin
    warn-about-java-serializer-usage = on

    debug {
      receive = off // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }
}

db {
  default {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://"${db.default.host}":5432/bct_dashboard3"
    host = "localhost"
    host = ${?DB_HOST}
    user = "bct_dashboard"
    user = ${?DB_USER}
    password = "linux"
    password = ${?DB_PASSWORD}

    # Connection Pool settings
    poolInitialSize = 10
    poolMaxSize = 20
    poolConnectionTimeoutMillis = 1000
  }
}

http {
  host = "0.0.0.0"
  host = ${?HTTP_HOST}
  port = 9000
  port = ${?HTTP_PORT}
}

currentBuildNumber = 5
jwtKey = "a real key will need to be here, but this long one will be hashed and that's a kind of similar result."
